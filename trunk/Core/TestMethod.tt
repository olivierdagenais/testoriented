<#@ template language="C#v3.5" inherits="AbstractMethodTemplate" #>
<#@ import namespace="SoftwareNinjas.Core" #>
<#@ import namespace="ICSharpCode.NRefactory.Ast" #>

/// <summary>
/// Tests the <c><#= Method.Name #></c> method with
/// TODO: write about scenario
/// </summary>
[Test]
public void <#= Method.Name #>_TODO ( ) {
	Assert.Fail ( "TODO: initialize variable(s)<# if ( HasReturnValue ) { #> and expected value<# } #>" );
<# foreach ( var parameter in Method.Parameters ) { #>
	<#= DetermineDeclarationForType(parameter.TypeReference) #> <#= parameter.ParameterName #> = <#= DefaultValue(parameter.TypeReference) #>;
<# } #>
	<# if ( HasReturnValue ) { #><#= Method.TypeReference #> actual = <#
	} #><#= ParentType.Name #>.<#= Method.Name #> ( <#= 
		Method.Parameters.Join(", ", p => p.ParameterName ) #> );
<# if ( HasReturnValue ) { #>
	<#= DetermineDeclarationForType(Method.TypeReference) #> expected = <#= DefaultValue(Method.TypeReference) #>;
	Assert.AreEqual ( expected, actual );
<# } #>
}
