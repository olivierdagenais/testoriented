<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <Import Project="$(MSBuildBinPath)\Microsoft.Common.targets" />
    <UsingTask TaskName="JavaCompiler" AssemblyFile="SoftwareNinjas.MsBuild.dll" />
    <UsingTask TaskName="ResolveJavaReferences" AssemblyFile="SoftwareNinjas.MsBuild.dll" />
    <UsingTask TaskName="Jar" AssemblyFile="SoftwareNinjas.MsBuild.dll" />

    <PropertyGroup>
        <MSBuildAllProjects>$(MSBuildAllProjects);SoftwareNinjas.Java.targets</MSBuildAllProjects>
        <DefaultLanguageSourceExtension>.java</DefaultLanguageSourceExtension>
        <Language>Java</Language>
    </PropertyGroup>

    <Target Name="CreateManifestResourceNames" />

    <PropertyGroup>

        <!-- If DebugSymbols is explicitly false, we definitely don't want symbols, so clear DebugType too-->
        <DebugType    Condition=" '$(DebugSymbols)' == 'false' "></DebugType>

        <!-- "None" is not technically a valid DebugType, so we can't pass it in as such
             to the compiler.  So here, we modify the properties so they make sense. -->
        <DebugSymbols Condition=" '$(DebugType)' == 'none' ">false</DebugSymbols>
        <DebugType    Condition=" '$(DebugType)' == 'none' "></DebugType>

        <_DisabledWarnings>$(NoWarn)</_DisabledWarnings>

        <!-- Provide a facility to override UseHostCompilerIfAvailable-->
        <UseHostCompilerIfAvailable Condition=" '$(UseHostCompilerIfAvailable)' == ''">true</UseHostCompilerIfAvailable>

        <!-- Our references are other JAR files; the Java-equivalent to assemblies -->
        <AllowedReferenceAssemblyFileExtensions>.jar</AllowedReferenceAssemblyFileExtensions>

    </PropertyGroup>

    <ItemGroup>
        <DocFileItem Include="$(DocumentationFile)" Condition="'$(DocumentationFile)'!=''"/>
    </ItemGroup>

    <Target
        Name="ResolveAssemblyReferences"
        DependsOnTargets="$(ResolveAssemblyReferencesDependsOn)">

        <ResolveJavaReferences
            Assemblies="@(Reference)"
            AssemblyFiles="@(_ResolvedProjectReferencePaths)"
			>

            <Output TaskParameter="ResolvedFiles" ItemName="ReferencePath"/>
            <Output TaskParameter="ResolvedFiles" ItemName="_ResolveAssemblyReferenceResolvedFiles"/>

        </ResolveJavaReferences>

    </Target>

    <PropertyGroup>
        <CoreCompileDependsOn>_ComputeNonExistentFileProperty</CoreCompileDependsOn>
    </PropertyGroup>
    <Target
        Name="CoreCompile"
        Inputs="$(MSBuildAllProjects);
                @(Compile);
                @(ManifestResourceWithNoCulture);
                $(ApplicationIcon);
                $(AssemblyOriginatorKeyFile);
                @(ManifestNonResxWithNoCultureOnDisk);
                @(ReferencePath);
                @(CompiledLicenseFile);
                @(EmbeddedDocumentation);
                @(CustomAdditionalCompileInputs)"
        Outputs="@(DocFileItem);
                 @(IntermediateAssembly);
                 $(NonExistentFile);
                 @(CustomAdditionalCompileOutputs)"
        DependsOnTargets="$(CoreCompileDependsOn)"
    >
    <JavaCompiler
        DefineConstants="$(DefineConstants"
		DisabledWarnings="$(_DisabledWarnings)"
        EmitDebugInformation="$(DebugSymbols)"
        Optimize="$(Optimize)"
        OutputAssembly="@(IntermediateAssembly)"
        References="@(ReferencePath)"
        Resources="@(ManifestResourceWithNoCulture);@(ManifestNonResxWithNoCultureOnDisk);@(CompiledLicenseFile)"
        Sources="@(Compile)"
        />
    </Target>

    <Target
        Name="CopyFilesToOutputDirectory"
        DependsOnTargets="
            ComputeIntermediateSatelliteAssemblies;
            _CopyFilesMarkedCopyLocal;
            _CopySourceItemsToOutputDirectory;
            _CopyAppConfigFile;
            _CopyManifestFiles;
            _CheckForCompileOutputs;
            _SGenCheckForOutputs">

		<Jar
			DestinationFolder="$(OutDir)"
			SourceFiles="@(IntermediateAssembly)"
			>
			<Output TaskParameter="DestinationFiles" ItemName="MainAssembly"/>
			<Output TaskParameter="DestinationFiles" ItemName="FileWrites"/>
		</Jar>

        <Message Importance="High" Text="$(MSBuildProjectName) -&gt; @(MainAssembly->'%(FullPath)')" />
    </Target>

</Project>
