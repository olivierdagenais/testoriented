% This file was created with JabRef 2.6.
% Encoding: UTF8

@ELECTRONIC{aberdour07dotnetunit,
  author = {Mark Aberdour},
  year = {2007},
  title = {Open source .NET developer testing tools},
  note = {Accessed June 2011 from \url{http://opensourcetesting.org/unit_dotnet.php}},
  url = {http://opensourcetesting.org/unit_dotnet.php}
}

@INPROCEEDINGS{baresel02fitnessfunction,
  author = {André Baresel and Harmen Sthamer and Michael Schmidt},
  title = {Fitness Function Design to Improve Evolutionary Structural Testing},
  booktitle = {Proceedings of the 2002 Conference on Genetic and Evolutionary Computation},
  year = {2002},
  series = {GECCO '02},
  pages = {1329--1336},
  address = {New York, USA},
  month = {July},
  file = {223 309 bytes:..\\papers\\Fitness function design to improve evolutionary structural testing.pdf:PDF},
  url = {http://www.cs.bham.ac.uk/~wbl/biblio/gecco2002/sbse053.pdf}
}

@ELECTRONIC{beck99simplesmalltalk,
  author = {Kent Beck},
  month = {November},
  year = {1999},
  title = {Simple Smalltalk Testing: With Patterns},
  note = {Accessed June 2011 from \url{http://www.xprogramming.com/testfram.htm}},
  url = {http://www.xprogramming.com/testfram.htm}
}

@INBOOK{binder00assertions,
  chapter = {17: Assertions},
  pages = {807--916},
  title = {Testing Object-Oriented Systems},
  publisher = {Addison-Wesley},
  year = {2000},
  author = {Robert V. Binder},
  isbn = {0-201-80938-9}
}

@INBOOK{binder00classes,
  chapter = {10: Classes},
  pages = {347--523},
  title = {Testing Object-Oriented Systems},
  publisher = {Addison-Wesley},
  year = {2000},
  author = {Robert V. Binder},
  isbn = {0-201-80938-9}
}

@INBOOK{binder00testharness,
  chapter = {19: Test Harness Design},
  pages = {957--1063},
  title = {Testing Object-Oriented Systems},
  publisher = {Addison-Wesley},
  year = {2000},
  author = {Robert V. Binder},
  isbn = {0-201-80938-9}
}

@INBOOK{binder00withnecessary,
  chapter = {4: With the Necessary Changes: Testing and Object-oriented Software},
  pages = {63--110},
  title = {Testing Object-Oriented Systems},
  publisher = {Addison-Wesley},
  year = {2000},
  author = {Robert V. Binder},
  isbn = {0-201-80938-9}
}

@ARTICLE{buehler08evolutionaryfunctional,
  author = {Oliver Bühler and Joachim Wegener},
  title = {Evolutionary functional testing},
  journal = {Computers \& Operations Research},
  year = {2008},
  volume = {35},
  pages = {3144--3160},
  number = {10},
  month = {October},
  note = {Part Special Issue: Search-based Software Engineering},
  doi = {DOI: 10.1016/j.cor.2007.01.015},
  file = {697 505 bytes:..\\papers\\Evolutionary functional testing.pdf:PDF},
  issn = {0305-0548},
  url = {http://www.sciencedirect.com/science/article/pii/S0305054807000329}
}

@ELECTRONIC{chabant09textilenet,
  author = {Ludovic Chabant},
  month = {March},
  year = {2009},
  title = {Textile.NET source code at changeset 26030},
  note = {Accessed April 2010 from \url{http://textilenet.codeplex.com/SourceControl/changeset/changes/26030}},
  url = {http://textilenet.codeplex.com/SourceControl/changeset/changes/26030}
}

@ARTICLE{cohen04statelessprograming,
  author = {Avi Cohen},
  title = {Stateless programming as a motif for teaching computer science},
  journal = {ACM Transactions on Computing Education / ACM Journal of Educational
	Resources in Computing},
  year = {2004},
  volume = {4},
  pages = {1--13},
  number = {4},
  month = {December},
  doi = {10.1145/1086339.1086760},
  file = {186 586 bytes:..\\papers\\Stateless Programming as a Motif for Teaching Computer Science.pdf:PDF},
  url = {http://doi.acm.org/10.1145/1086339.1086760}
}

@INPROCEEDINGS{dijkstra69structuredprogramming,
  author = {Edsger W. Dijkstra},
  title = {Structured programming},
  booktitle = {Software Engineering Techniques: Report of a conference sponsored
	by the NATO Science Committee},
  year = {1969},
  editor = {J. N. Buxton and B. Randell},
  month = {October},
  publisher = {Scientific Affairs Division, NATO},
  file = {3 450 000 bytes:..\\papers\\W\:\\Dropbox\\testoriented\\thesis\\papers\\Software Engineering Techniques.pdf:PDF},
  location = {Rome, Italy},
  url = {http://rogue.ncl.ac.uk/file_store/17.pdf}
}

@ELECTRONIC{dijkstra88crueltycomputing,
  author = {Edsger W. Dijkstra},
  month = {December},
  year = {1988},
  title = {On the cruelty of really teaching computing science},
  note = {Accessed February 2012 from \url{http://www.cs.utexas.edu/~EWD/transcriptions/EWD10xx/EWD1036.html}},
  url = {http://www.cs.utexas.edu/~EWD/transcriptions/EWD10xx/EWD1036.html}
}

@MISC{dixon08objectivemeasure,
  author = {Mark Dixon},
  title = {An Objective Measure of Code Quality},
  howpublished = {Technical paper on website},
  month = {January},
  year = {2008},
  citeseerurl = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.130.7149},
  file = {86 271 bytes:..\\papers\\An Objective Measure of Code Quality.pdf:PDF},
  masid = {5487933},
  url = {http://www.enerjy.com/techpaper-2008-01-02.pdf}
}

@ARTICLE{dolado03anempirical,
  author = {J.J. Dolado and M. Harman and M.C. Otero and L. Hu},
  title = {An Empirical Investigation of the Influence of a Type of Side Effects
	on Program Comprehension},
  journal = {IEEE Transactions on Software Engineering},
  year = {2003},
  volume = {29},
  pages = {665-670},
  number = {7},
  month = {July},
  address = {Los Alamitos, CA, USA},
  doi = {http://doi.ieeecomputersociety.org/10.1109/TSE.2003.1214329},
  file = {1 552 471 bytes:..\\papers\\An empirical investigation of the influence of a type of side effects on program comprehension.pdf:PDF},
  issn = {0098-5589},
  publisher = {IEEE Computer Society},
  url = {http://www.dcs.kcl.ac.uk/staff/mark/tse1.pdf}
}

@ELECTRONIC{feathers05unittesting,
  author = {Michael Feathers},
  month = {September},
  year = {2005},
  title = {A Set of Unit Testing Rules},
  note = {Accessed July 2011 from \url{http://www.artima.com/weblogs/viewpost.jsp?thread=126923}},
  url = {http://www.artima.com/weblogs/viewpost.jsp?thread=126923},
  review = {"Generally, unit tests are supposed to be small, they test a method
	or the interaction of a couple of methods."}
}

@ELECTRONIC{fowler06xunit,
  author = {Martin Fowler},
  month = {February},
  year = {2006},
  title = {XUnit},
  note = {Accessed June 2011 from \url{http://www.martinfowler.com/bliki/Xunit.html}},
  url = {http://www.martinfowler.com/bliki/Xunit.html}
}

@ELECTRONIC{fowler00refactoring,
  author = {Martin Fowler},
  month = {May},
  year = {2000},
  title = {Refactoring Home},
  note = {Accessed July 2011 from \url{http://www.refactoring.com/}},
  url = {http://www.refactoring.com/}
}

@BOOK{graham93onlisp,
  title = {On Lisp},
  publisher = {Prentice Hall},
  year = {1993},
  editor = {Alan Apt},
  author = {Paul Graham},
  pages = {432},
  file = {1 030 575 bytes:..\\papers\\On Lisp.pdf:PDF},
  url = {http://www.paulgraham.com/onlisp.html}
}

@ELECTRONIC{haahr99programmingstyle,
  author = {Paul Haahr},
  month = {October},
  year = {1999},
  title = {A Programming Style for Java},
  note = {Accessed June 2011 from \url{http://www.webcom.com/~haahr/essays/java-style/single-page.html}},
  url = {http://www.webcom.com/~haahr/essays/java-style/single-page.html}
}

@MISC{harman11refactoringtestability,
  author = {Mark Harman},
  title = {Refactoring as Testability Transformation},
  howpublished = {Keynote paper for Refactoring and Testing Workshop},
  month = {March},
  year = {2011},
  file = {464 261 bytes:..\\papers\\Refactoring as Testability Transformation.pdf:PDF},
  url = {http://www.cs.ucl.ac.uk/staff/mharman/reftest.pdf}
}

@INPROCEEDINGS{harman08openproblems,
  author = {Mark Harman},
  title = {Open Problems in Testability Transformation},
  booktitle = {Proceedings of the 2008 IEEE International Conference on Software
	Testing Verification and Validation Workshop},
  year = {2008},
  pages = {196--209},
  address = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid = {1440237},
  citeseerurl = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.144.976},
  doi = {10.1109/ICSTW.2008.30},
  file = {329 790 bytes:..\\papers\\Open Problems in Testability Transformation.pdf:PDF},
  isbn = {978-0-7695-3388-9},
  numpages = {14},
  url = {http://www.dcs.kcl.ac.uk/staff/mark/sbst.pdf}
}

@INPROCEEDINGS{harman07impactinput,
  author = {Harman, Mark and Hassoun, Youssef and Lakhotia, Kiran and McMinn,
	Phil and Wegener, Joachim},
  title = {The impact of input domain reduction on search-based test data generation},
  booktitle = {Proceedings of the the 6th joint meeting of the European software
	engineering conference and the ACM SIGSOFT symposium on The foundations
	of software engineering},
  year = {2007},
  series = {ESEC-FSE '07},
  pages = {155--164},
  address = {New York, NY, USA},
  month = {September},
  publisher = {ACM},
  citeseerurl = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.102.2892},
  doi = {http://doi.acm.org/10.1145/1287624.1287647},
  file = {502 570 bytes:..\\papers\\The impact of input domain reduction on search-based test data generation.pdf:PDF},
  isbn = {978-1-59593-811-4},
  location = {Dubrovnik, Croatia},
  url = {http://www.cs.ucl.ac.uk/staff/mharman/fse07.ps}
}

@ARTICLE{harman04testabilitytransformation,
  author = {Mark Harman and Lin Hu and Robert Hierons and Joachim Wegener and
	Harmen Sthamer and André Baresel and Marc Roper},
  title = {Testability Transformation},
  journal = {IEEE Transactions on Software Engineering},
  year = {2004},
  volume = {30},
  pages = {3--16},
  number = {1},
  month = {January},
  citeseerurl = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.11.478},
  doi = {10.1.1.11.478},
  file = {1 603 402 bytes:..\\papers\\Testability Transformation.pdf:PDF},
  issn = {0098-5589},
  url = {http://www.cs.ucl.ac.uk/staff/mharman/tse2.pdf}
}

@INPROCEEDINGS{harman02improvingevolutionary,
  author = {Mark Harman and Lin Hu and Robert M. Hierons and André Baresel and
	Harman Sthamer},
  title = {Improving Evolutionary Testing By Flag Removal},
  booktitle = {Proceedings of the Genetic and Evolutionary Computation Conference},
  year = {2002},
  series = {GECCO '02},
  pages = {1359--1366},
  address = {San Francisco, CA, USA},
  publisher = {Morgan Kaufmann Publishers Inc.},
  acmid = {682806},
  citeseerurl = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.16.75},
  doi = {10.1.1.16.75},
  file = {226 587 bytes:..\\papers\\Improving Evolutionary Testing by Flag Removal.pdf:PDF},
  isbn = {1-55860-878-8},
  numpages = {8},
  url = {http://www.cs.ucl.ac.uk/staff/mharman/gecco02f.ps}
}

@INPROCEEDINGS{harman09aop,
  author = {Mark Harman and Fayezin Islam and Tao Xie and Stefan Wappler},
  title = {Automated Test Data Generation for Aspect-Oriented Programs},
  booktitle = {Proceedings of the 8th International Conference on Aspect-Oriented
	Software Development},
  year = {2009},
  series = {AOSD '09},
  pages = {185--196},
  address = {New York, NY, USA},
  month = {March},
  publisher = {ACM},
  citeseerurl = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.143.6458},
  doi = {http://dx.doi.org/10.1145/1509239.1509264},
  file = {1 359 493 bytes:..\\papers\\Automated test data generation for aspect-oriented programs.pdf:PDF},
  isbn = {978-1-60558-442-3},
  location = {Charlottesville, Virginia, USA},
  url = {http://www.cs.ucl.ac.uk/staff/mharman/aosd09.pdf}
}

@INPROCEEDINGS{harman01sideeffect,
  author = {Mark Harman and Malcolm Munro and Lin Hu and Xingyuan Zhang},
  title = {Side-Effect Removal Transformation},
  booktitle = {In 9th IEEE International Workshop on Program Comprehension (IWPC'01},
  year = {2001},
  pages = {310--319},
  publisher = {IEEE Computer Society Press},
  citeseerurl = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.27.841},
  doi = {10.1109/WPC.2001.921741},
  file = {794 531 bytes:..\\papers\\Side-Effect Removal Transformation (printed).pdf:PDF;268 012 bytes (tops of pages cut off):..\\papers\\Side-Effect Removal Transformation.pdf:PDF},
  url = {http://www.cs.ucl.ac.uk/staff/mharman/iwpc01b.ps}
}

@ELECTRONIC{hevery09thinkoo,
  author = {Miško Hevery},
  month = {July},
  year = {2009},
  title = {How to think about OO},
  note = {Accessed June 2011 from \url{http://misko.hevery.com/2009/07/31/how-to-think-about-oo/}},
  url = {http://misko.hevery.com/2009/07/31/how-to-think-about-oo/}
}

@ELECTRONIC{hevery08flawbrittle,
  author = {Miško Hevery},
  month = {November},
  year = {2008},
  title = {Flaw: Brittle Global State \& Singletons},
  note = {Accessed June 2011 from \url{http://misko.hevery.com/code-reviewers-guide/flaw-brittle-global-state-singletons/}},
  url = {http://misko.hevery.com/code-reviewers-guide/flaw-brittle-global-state-singletons/}
}

@ELECTRONIC{hevery08staticmethods,
  author = {Miško Hevery},
  month = {December},
  year = {2008},
  title = {Static Methods are Death to Testability},
  note = {Accessed June 2011 from \url{http://misko.hevery.com/2008/12/15/static-methods-are-death-to-testability/}},
  url = {http://misko.hevery.com/2008/12/15/static-methods-are-death-to-testability/}
}

@ELECTRONIC{hevery08testabilityexplorer,
  author = {Miško Hevery},
  month = {April},
  year = {2008},
  title = {Testability Explorer},
  note = {Accessed June 2011 from \url{http://code.google.com/p/testability-explorer/}},
  url = {http://code.google.com/p/testability-explorer/}
}

@INPROCEEDINGS{janota07reachabilityanalysis,
  author = {Mikoláš Janota and Radu Grigore and Michał Moskal},
  title = {Reachability analysis for annotated code},
  booktitle = {Proceedings of the 2007 conference on Specification and verification
	of component-based systems: 6th Joint Meeting of the European Conference
	on Software Engineering and the ACM SIGSOFT Symposium on the Foundations
	of Software Engineering},
  year = {2007},
  series = {SAVCBS '07},
  pages = {23--30},
  address = {New York, NY, USA},
  publisher = {ACM},
  doi = {10.1145/1292316.1292319},
  file = {211 082 bytes:..\\papers\\Reachability Analysis for Annotated Code.pdf:PDF},
  isbn = {978-1-59593-721-6},
  location = {Dubrovnik, Croatia},
  url = {http://research.microsoft.com/en-us/um/people/moskal/pdf/JanotaGrigoreMoskal07.pdf}
}

@ARTICLE{kay93earlyhistory,
  author = {Alan C. Kay},
  title = {The Early History Of Smalltalk},
  journal = {SIGPLAN Notices},
  year = {1993},
  volume = {28},
  pages = {69--95},
  number = {3},
  month = {March},
  booktitle = {History of Programming Languages},
  doi = {10.1145/155360.155364},
  file = {3 777 617 bytes:..\\papers\\The Early History Of Smalltalk.pdf:PDF},
  issn = {0362-1340},
  url = {http://www.smalltalk.org/smalltalk/TheEarlyHistoryOfSmalltalk_Abstract.html}
}

@ARTICLE{king76symbolicexecution,
  author = {King, James C.},
  title = {Symbolic execution and program testing},
  journal = {Communications of the ACM},
  year = {1976},
  volume = {19},
  pages = {385--394},
  number = {7},
  month = {July},
  address = {New York, NY, USA},
  doi = {http://doi.acm.org/10.1145/360248.360252},
  file = {1 028 259 bytes:..\\papers\\Symbolic execution and program testing.pdf:PDF},
  issn = {0001-0782},
  publisher = {ACM},
  url = {http://www.cs.uiuc.edu/class/sp11/cs477/king76symbolicexecution.pdf}
}

@INPROCEEDINGS{korel05datadependence,
  author = {Korel, Bogdan and Harman, Mark and Chung, S. and Apirukvorapinit,
	P. and Gupta, R. and Zhang, Q.},
  title = {Data Dependence Based Testability Transformation in Automated Test
	Generation},
  booktitle = {Proceedings of the 16th IEEE International Symposium on Software
	Reliability Engineering},
  year = {2005},
  pages = {245--254},
  address = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid = {1105253},
  doi = {10.1109/ISSRE.2005.16},
  file = {128 784 bytes:..\\papers\\Data Dependence Based Testability Transformation in Automated Test Generation.pdf:PDF},
  isbn = {0-7695-2482-6},
  url = {www.cs.iit.edu/~ren/Teaching/cs695-08S/Qi-Zhang.pdf}
}

@INPROCEEDINGS{kruse09highlyconfigurable,
  author = {Kruse, Peter M. and Wegener, Joachim and Wappler, Stefan},
  title = {A Highly Configurable Test System for Evolutionary Black-Box Testing
	of Embedded Systems},
  booktitle = {Proceedings of the 11th Annual conference on Genetic and evolutionary
	computation},
  year = {2009},
  series = {GECCO '09},
  pages = {1545--1552},
  address = {New York, NY, USA},
  publisher = {ACM},
  doi = {10.1145/1569901.1570108},
  file = {639 878 bytes:..\\papers\\A Highly Configurable Test System for Evolutionary Black-Box Testing of Embedded Systems.pdf:PDF},
  isbn = {978-1-60558-325-9},
  location = {Montréal, Québec, Canada},
  url = {http://www.sheridanprinting.com/acm/gecco/files/t13fp495-kruse.pdf}
}

@ARTICLE{lakhotia10empiricalinvestigation,
  author = {Kiran Lakhotia and Phil McMinn and Mark Harman},
  title = {An empirical investigation into branch coverage for C programs using
	CUTE and AUSTIN},
  journal = {Journal of Systems and Software},
  year = {2010},
  volume = {83},
  pages = {2379--2391},
  number = {12},
  month = {December},
  note = {TAIC PART 2009 - Testing: Academic \& Industrial Conference - Practice
	And Research Techniques},
  doi = {DOI: 10.1016/j.jss.2010.07.026},
  file = {516 397 bytes:..\\papers\\An empirical investigation into branch coverage for C programs using CUTE and AUSTIN.pdf:PDF},
  issn = {0164-1212},
  keywords = {Automated test data generation},
  publisher = {Elsevier Science Inc.},
  url = {www.cs.ucl.ac.uk/staff/mharman/jss-kl.pdf}
}

@ARTICLE{Lammermann:2008:EET:1327535.1327627,
  author = {Lammermann, Frank and Baresel, Andr\'{e} and Wegener, Joachim},
  title = {Evaluating evolutionary testability for structure-oriented testing
	with software measurements},
  journal = {Appl. Soft Comput.},
  year = {2008},
  volume = {8},
  pages = {1018--1028},
  month = {March},
  acmid = {1327627},
  address = {Amsterdam, The Netherlands, The Netherlands},
  doi = {10.1016/j.asoc.2006.06.010},
  issn = {1568-4946},
  issue = {2},
  keywords = {Automated test case generation, Evolutionary testability, Evolutionary
	testing, Software measurements},
  numpages = {11},
  publisher = {Elsevier Science Publishers B. V.},
  url = {http://portal.acm.org/citation.cfm?id=1327535.1327627}
}

@INBOOK{leveson95medicaldevices,
  chapter = {Appendix A: Medical Devices: The Therac-25},
  pages = {1--49},
  title = {Safeware: System Safety and Computers},
  publisher = {Addison-Wesley},
  year = {1995},
  author = {Nancy Leveson},
  citeseerurl = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.39.704},
  doi = {10.1.1.39.704},
  file = {299 363 bytes:..\\papers\\Medical Devices - The Therac-25.pdf:PDF},
  howpublished = {Appendix from Safeware: System Safety and Computers},
  url = {http://www.cs.washington.edu/research/projects/safety/www/papers/therac.ps}
}

@INPROCEEDINGS{li05prioritizecode,
  author = {Li, J. Jenny},
  title = {Prioritize Code for Testing to Improve Code Coverage of Complex Software},
  booktitle = {Proceedings of the 16th IEEE International Symposium on Software
	Reliability Engineering},
  year = {2005},
  pages = {75--84},
  address = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid = {1105237},
  citeseerurl = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.91.1551},
  doi = {10.1109/ISSRE.2005.33},
  file = {167 365 bytes:..\\papers\\Prioritize Code for Testing to Improve Code Coverage of Complex Software.pdf:PDF},
  isbn = {0-7695-2482-6},
  keywords = {Testing, code coverage, dominator analysis, coverage priority},
  numpages = {10},
  url = {http://pubs.research.avayalabs.com/pdfs/ALR-2005-032-paper.pdf}
}

@TECHREPORT{lions96ariane,
  author = {Jacques-Louis Lions and Lennart Lübeck and Jean-Luc Fauquembergue
	and Gilles Kahn and Wolfgang Kubbat and Stefan Levedag and Leonardo
	Mazzini and Didier Merle and Colin O'Halloran},
  title = {ARIANE 5 Flight 501 Failure},
  institution = {Ariane 501 Inquiry Board},
  year = {1996},
  type = {Report},
  address = {Paris},
  month = {July},
  note = {An HTML version is available at \url{http://en.wikisource.org/wiki/Ariane_501_Inquiry_Board_report}},
  file = {2 168 608 bytes:..\\papers\\Ariane 5 Flight 501 Failure.pdf:PDF},
  url = {http://esamultimedia.esa.int/docs/esa-x-1819eng.pdf}
}

@ARTICLE{mccabe76complexitymeasure,
  author = {Thomas J. McCabe},
  title = {A Complexity Measure},
  journal = {Software Engineering, IEEE Transactions on},
  year = {1976},
  volume = {SE-2},
  pages = {308--320},
  number = {4},
  month = {December},
  doi = {10.1109/TSE.1976.233837},
  file = {2 465 615 bytes:..\\papers\\A Complexity Measure.pdf:PDF},
  issn = {0098-5589},
  url = {http://www.literateprogramming.com/mccabe.pdf}
}

@INPROCEEDINGS{mcminn09searchbased,
  author = {McMinn, Phil},
  title = {Search-based failure discovery using testability transformations
	to generate pseudo-oracles},
  booktitle = {Proceedings of the 11th Annual conference on Genetic and evolutionary
	computation},
  year = {2009},
  series = {GECCO '09},
  pages = {1689--1696},
  address = {New York, NY, USA},
  publisher = {ACM},
  acmid = {1570127},
  doi = {http://doi.acm.org/10.1145/1569901.1570127},
  file = {526 929 bytes:..\\papers\\Search-based failure discovery using testability transformations to generate pseudo-oracles.pdf:PDF},
  isbn = {978-1-60558-325-9},
  location = {Montréal, Québec, Canada},
  numpages = {8},
  url = {http://doi.acm.org/10.1145/1569901.1570127}
}

@PHDTHESIS{mcminn05evolutionarysearch,
  author = {Phil McMinn},
  title = {Evolutionary Search for Test Data in the Presence of State Behaviour},
  school = {University of Sheffield},
  year = {2005},
  month = {January},
  citeseerurl = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.59.1505},
  doi = {10.1.1.59.1505},
  file = {1 689 109 bytes:..\\papers\\Evolutionary Search for Test Data in the Presence of State Behaviour.pdf:PDF},
  url = {http://philmcminn.staff.shef.ac.uk/papers/2005-thesis.pdf}
}

@ARTICLE{mcminn04searchbased,
  author = {Phil McMinn},
  title = {Search-based Software Test Data Generation: A Survey},
  journal = {Journal on Software Testing, Verification, and Reliability},
  year = {2004},
  volume = {14},
  pages = {105--156},
  number = {2},
  month = {June},
  citeseerurl = {http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.59.3137},
  file = {346 178 bytes:..\\papers\\Search-based software test data generation - A survey.pdf:PDF},
  url = {http://www.dcs.shef.ac.uk/~phil/pub/sbst.pdf}
}

@ARTICLE{mcminn08empiricalevaluation,
  author = {Phil McMinn and David Binkley and Mark Harman},
  title = {Empirical Evaluation of a Nesting Testability Transformation for
	Evolutionary Testing},
  journal = {ACM Transactions on Software Engineering and Methodology (TOSEM)},
  year = {2008},
  volume = {18},
  pages = {11:1--11:27},
  number = {3},
  month = {June},
  address = {New York, NY, USA},
  doi = {http://dx.doi.org/10.1145/1525880.1525884},
  file = {813 663 bytes:..\\papers\\Empirical evaluation of a nesting testability transformation for evolutionary testing.pdf:PDF},
  issn = {1049-331X},
  publisher = {ACM},
  url = {http://www.dcs.kcl.ac.uk/staff/mark/tosem-empiricalnesting.pdf}
}

@INPROCEEDINGS{mcminn03thestate,
  author = {Phil McMinn and Mike Holcombe},
  title = {The State Problem for Evolutionary Testing},
  booktitle = {Proceedings of the Genetic and Evolutionary Computation Conference
	(GECCO)},
  year = {2003},
  volume = {2724},
  series = {Lecture Notes in Computer Science},
  pages = {2488-2498},
  publisher = {Springer-Verlag},
  citeseerurl = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.59.1501},
  comment = {ISBN 3540406034},
  doi = {10.1.1.59.1501},
  file = {78 504 bytes:..\\papers\\The State Problem for Evolutionary Testing.pdf:PDF},
  url = {http://www.dcs.shef.ac.uk/~phil/pub/stateproblem.pdf}
}

@ELECTRONIC{morrison07maintainabilityindex,
  author = {Conor Morrison},
  month = {November},
  year = {2007},
  title = {Maintainability Index Range and Meaning},
  note = {Accessed July 2011 from \url{http://blogs.msdn.com/b/codeanalysis/archive/2007/11/20/maintainability-index-range-and-meaning.aspx}},
  url = {http://blogs.msdn.com/b/codeanalysis/archive/2007/11/20/maintainability-index-range-and-meaning.aspx}
}

@ELECTRONIC{osherove06writemaintainable,
  author = {Roy Osherove},
  month = {January},
  year = {2006},
  title = {Write Maintainable Unit Tests That Will Save You Time And Tears},
  note = {Accessed July 2011 from \url{http://msdn.microsoft.com/en-us/magazine/cc163665.aspx}},
  url = {http://msdn.microsoft.com/en-us/magazine/cc163665.aspx},
  file = {Downloaded from http\://download.microsoft.com/download/3/a/7/3a7fa450-1f33-41f7-9e6d-3aa95b5a6aea/MSDNMagazineJanuary2006en-us.chm:..\\MSDNMagazineJanuary2006en-us.chm:CHM},
  review = {"Keep your tests simple and you just might find bugs in your production
	code rather than in your unit tests."},
  series = {MSDN Magazine}
}

@BOOK{patton05softwaretesting,
  title = {Software testing},
  publisher = {Sams},
  year = {2005},
  author = {Ron Patton},
  pages = {389},
  series = {Safari Books Online},
  isbn = {9780672327988},
  lccn = {2005927095},
  url = {http://books.google.com/books?id=MTEiAQAAIAAJ}
}

@BOOK{vanroy04conceptstechniques,
  title = {Concepts, techniques, and models of computer programming},
  publisher = {MIT Press},
  year = {2004},
  author = {Peter Van-Roy, Seif Haridi},
  isbn = {9780262220699},
  lccn = {2003065140},
  review = {Chapter 6
	
	p. 407: "(...) declarative programs are easier to test, since it is
	enough to test single calls (give arguments and check the results).
	Testing stateful programs is harder because it involves testing sequences
	of calls (due to the internal history)."
	
	p. 410: "To be precise, because a procedure is stateless, all its
	knowledge, its "smarts," are in its arguments. The smarter the procedure
	gets, the "heavier" and more numerous the arguments get."
	
	p. 412: "Side effects make reasoning about the program extremely difficult.
	(...) We find that a good rule of thumb for complex systems is to
	keep as many components as possible declarative. State should not
	be "smeared out" over many components. It should be concentrated
	in just a few carefully selected components."},
  url = {http://books.google.com/books?id=\_bmyEnUnfTsC}
}

@ELECTRONIC{pilch07enforcingimmutability,
  author = {Kevin Pilch-Bisson and Jay Bazuzi},
  month = {November},
  year = {2007},
  title = {Enforcing Immutability in Code},
  note = {Accessed August 2011 from \url{http://blogs.msdn.com/b/kevinpilchbisson/archive/2007/11/20/enforcing-immutability-in-code.aspx}},
  url = {http://blogs.msdn.com/b/kevinpilchbisson/archive/2007/11/20/enforcing-immutability-in-code.aspx}
}

@ELECTRONIC{poole00nunit,
  author = {Charlie Poole and Jamie Cansdale and Gary Feldman and James W. Newkirk
	and Alexei A. Vorontsov and Michael C. Two and Philip A. Craig},
  month = {September},
  year = {2000},
  title = {NUnit},
  note = {Accessed September 2011 from \url{http://nunit.org/}},
  url = {http://nunit.org/}
}

@ARTICLE{reddy96imperativefunctional,
  author = {Uday S. Reddy},
  title = {Imperative Functional Programming},
  journal = {ACM Computing Surveys},
  year = {1996},
  volume = {28},
  pages = {312--314},
  number = {2},
  month = {June},
  acmid = {234736},
  address = {New York, NY, USA},
  doi = {http://doi.acm.org/10.1145/234528.234736},
  file = {303 533 bytes:..\\papers\\Imperative functional programming.pdf:PDF},
  issn = {0360-0300},
  issue = {2},
  numpages = {3},
  publisher = {ACM},
  url = {http://doi.acm.org/10.1145/234528.234736}
}

@ELECTRONIC{reichl10keepass,
  author = {Dominik Reichl},
  month = {March},
  year = {2010},
  title = {KeePass Password Safe source code for version 2.10},
  note = {Accessed April 2010 from \url{http://sourceforge.net/projects/keepass/files/KeePass%202.x/2.10/KeePass-2.10-Source.zip/download}},
  url = {http://sourceforge.net/projects/keepass/files/KeePass%202.x/2.10/KeePass-2.10-Source.zip/download}
}

@MASTERSTHESIS{schmidt09userdirected,
  author = {Frederik Schmidt},
  title = {User Directed Search Based Reverse Engineering},
  school = {School of Computing and Mathematical Sciences, Auckland University
	of Technology},
  year = {2009},
  file = {3 682 229 bytes:..\\papers\\User Directed Search Based Reverse Engineering.pdf:PDF},
  url = {http://repositoryaut.lconz.ac.nz/bitstream/10292/836/4/SchmidtF.pdf}
}

@ARTICLE{schultz93testevaluation,
  author = {Alan C. Schultz and John J. Grefenstette and Kenneth A. De Jong},
  title = {Test and Evaluation by Genetic Algorithms},
  journal = {IEEE Expert / IEEE Intelligent Systems},
  year = {1993},
  volume = {8},
  pages = {9--14},
  number = {5},
  month = {October},
  doi = {10.1109/64.236476},
  file = {650 684 bytes:..\\papers\\Test and evaluation by genetic algorithms.pdf:PDF},
  issn = {0885-9000},
  url = {http://www.computer.org/portal/web/csdl/abs/mags/ex/1993/05/x5009abs.htm}
}

@ELECTRONIC{shapovalov09atomic,
  author = {Alexander Shapovalov},
  month = {April},
  year = {2010},
  title = {Atomic CMS 2.0},
  note = {Accessed April 2010 from \url{http://atomiccms.codeplex.com/releases/view/43118}},
  url = {http://atomiccms.codeplex.com/releases/view/43118}
}

@ELECTRONIC{shaw06nant,
  author = {Gerry Shaw and Ian MacLean and Scott Hernandez and Gert Driesen},
  month = {October},
  year = {2006},
  title = {NAnt - A .NET Build Tool},
  note = {Accessed July 2011 from \url{http://nant.sourceforge.net/}},
  url = {http://nant.sourceforge.net/}
}

@ELECTRONIC{sink06advocatingcoverage,
  author = {Eric Sink},
  month = {September},
  year = {2006},
  title = {Advocating the use of code coverage},
  note = {Accessed June 2011 from \url{http://www.ericsink.com/articles/Code_Coverage.html}},
  url = {http://www.ericsink.com/articles/Code_Coverage.html}
}

@ELECTRONIC{spolsky00joeltest,
  author = {Joel Spolsky},
  month = {August},
  year = {2000},
  title = {The Joel Test: 12 Steps to Better Code},
  note = {Accessed June 2011 from \url{http://www.joelonsoftware.com/articles/fog0000000043.html}},
  url = {http://www.joelonsoftware.com/articles/fog0000000043.html}
}

@ELECTRONIC{stewart10testsizes,
  author = {Simon Stewart},
  month = {December},
  year = {2010},
  title = {Test Sizes},
  note = {Accessed July 2011 from \url{http://googletesting.blogspot.com/2010/12/test-sizes.html}},
  url = {http://googletesting.blogspot.com/2010/12/test-sizes.html}
}

@INPROCEEDINGS{sthamer02usingevolutionary,
  author = {Harmen Sthamer and Joachim Wegener and André Baresel},
  title = {Using evolutionary testing to improve efficiency and quality in software
	testing},
  booktitle = {In Proceedings of the 2nd Asia-Pacific Conference on Software Testing
	Analysis and Review},
  year = {2002},
  series = {AsiaSTAR 2002},
  pages = {22--24},
  month = {July},
  citeseerurl = {http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.95.1277},
  doi = {10.1.1.95.1277},
  file = {192 375 bytes:..\\papers\\Using ET to improve Efficiency and Quality in Software Testing.pdf:PDF},
  location = {Melbourne, Australia},
  url = {http://www.systematic-testing.com/documents/Sthamer_AsiaSTAR2002_doc.pdf}
}

@INPROCEEDINGS{tillman08pex,
  author = {Tillmann, Nikolai and De Halleux, Jonathan},
  title = {Pex: white box test generation for .NET},
  booktitle = {Proceedings of the 2nd international conference on Tests and proofs},
  year = {2008},
  volume = {4966},
  series = {TAP'08},
  pages = {134--153},
  address = {Berlin, Heidelberg},
  publisher = {Springer-Verlag},
  acmid = {1792798},
  doi = {http://dx.doi.org/10.1007/978-3-540-79124-9_10},
  file = {420 614 bytes:..\\papers\\Pex - white box test generation for .NET.pdf:PDF},
  isbn = {3-540-79123-X, 978-3-540-79123-2},
  location = {Prato, Italy},
  numpages = {20},
  url = {http://research.microsoft.com/pubs/81193/fulltext.pdf}
}

@ARTICLE{tip95surveyslicing,
  author = {Frank Tip},
  title = {A Survey of Program Slicing Techniques},
  journal = {Journal of Programming Languages},
  year = {1995},
  volume = {3},
  pages = {121--189},
  citeseerurl = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.20.9646},
  doi = {10.1.1.20.9646},
  file = {406 649 bytes:..\\papers\\A Survey of Program Slicing Techniques.pdf:PDF},
  url = {http://www.research.ibm.com/people/t/tip/papers/jpl1995.pdf}
}

@INPROCEEDINGS{tracey98wayforward,
  author = {Nigel Tracey and John A. Clark and Keith Mander},
  title = {The Way Forward for Unifying Dynamic Test-Case Generation: the Optimisation-based
	Approach},
  booktitle = {Proceedings of the IFIP International Workshop on Dependable Computing
	and Its Applications},
  year = {1998},
  series = {DCIA '98},
  pages = {169--180},
  address = {Johannesburg, South Africa},
  month = {January},
  publisher = {University of the Witwatersrand},
  citeseerurl = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.145.7678},
  doi = {10.1.1.145.7678},
  file = {76 680 bytes:..\\papers\\The Way Forward for Unifying Dynamic Test Case Generation.pdf:PDF},
  url = {http://www.cs.york.ac.uk/testsig/publications/njt-jan98.pdf}
}

@INPROCEEDINGS{tracey98automatedprogram,
  author = {Nigel Tracey and John Clark and Keith Mander},
  title = {Automated Program Flaw Finding using Simulated Annealing},
  booktitle = {Proceedings of the 1998 ACM SIGSOFT international symposium on Software
	testing and analysis},
  year = {1998},
  series = {ISSTA '98},
  pages = {73--81},
  address = {New York, NY, USA},
  month = {March},
  publisher = {ACM},
  citeseerurl = {http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.146.2364},
  doi = {10.1145/271771.271792},
  file = {82 303 bytes:..\\papers\\Automated Program Flaw Finding using Simulated Annealing.pdf:PDF},
  isbn = {0-89791-971-8},
  location = {Clearwater Beach, Florida, United States},
  url = {http://www.cs.york.ac.uk/%7Ejac/PublishedPapers/AutomatedFlawFindingMar98.pdf}
}

@ELECTRONIC{vandoren97maintainabilityindex,
  author = {Edmond VanDoren},
  month = {January},
  year = {1997},
  title = {Maintainability Index Technique for Measuring Program Maintainability},
  organization = {Carnegie Mellon Software Engineering Institute},
  note = {Accessed July 2011 from \url{http://web.archive.org/web/20080515074252/http://www.sei.cmu.edu/str/descriptions/mitmpm_body.html}},
  url = {http://www.sei.cmu.edu/str/descriptions/mitmpm.html}
}

@ELECTRONIC{vogel07junittutorial,
  author = {Lars Vogel},
  year = {2007},
  title = {JUnit - Tutorial},
  note = {Accessed July 2011 from \url{http://www.vogella.de/articles/JUnit/article.html}},
  url = {http://www.vogella.de/articles/JUnit/article.html}
}

@ELECTRONIC{waldschmidt04ncover,
  author = {Peter Waldschmidt},
  month = {January},
  year = {2004},
  title = {NCover},
  note = {Accessed September 2011 from \url{http://www.ncover.com/}},
  url = {http://www.ncover.com/}
}

@BOOK{wampler11functionalprogramming,
  title = {Functional Programming for Java Developers},
  publisher = {O'Reilly Media},
  year = {2011},
  editor = {Mike Loukides and Shawn Wallace},
  author = {Dean Wampler},
  pages = {88},
  month = {July},
  isbn = {978-1-4493-1103-2},
  review = {General:
	
	There's a recurring theme that functions not have this benefit for
	re-use and clean code, but also for concurrency, with Chapter 4 dedicated
	to concurrency.
	
	
	Preface:
	
	"Scala is a JVM language, a potential successor to Java, with the
	goal of bringing object-oriented and functional programming into
	one coherent whole. Clojure is the other well-known functional language
	on the JVM. It is a Lisp dialect that minimizes the use of OOP in
	favor of functional programming."
	
	
	Chapter 2
	
	- mentions "OCaml" as "a hybrid object-functional language"
	
	"It is harder to understand and exhaustively test code with mutable
	values, particularly if mutations aren't localized to one place.
	Some of the most difficult bugs to find in large systems occur when
	state is modified non-locally, by client code that is located elsewhere
	in the program."
	
	"If we encapsulate mutations in well-defined areas and keep the rest
	of the code free of mutation, we improve the robustness and modularity
	of our code."
	
	"Another source of complexity, which leads to bugs, are functions
	that mutate state, e.g., setting values of an object's field or global
	variables."
	
	"In mathematics, functions never have side effects, meaning they are
	side-effect-free. For example, no matter how much work sin(x) has
	to do, its entire result is returned to the caller. No external state
	is changed. Note that a real implementation might cache previously
	calculated values, for efficiency, which would require changing the
	state of a cache. It's up to the implementer to preserve the side-effect-free
	external behavior (including thread safety), as seen by users of
	the function"
	
	"Side-effect-free functions make excellent building blocks for reuse,
	since they don't depend on the context in which they run. Compared
	to functions with side effects, they are also easier to design, comprehend,
	optimize, and test. Hence, they are less likely to have bugs."
	
	
	Chapter 3
	
	"Back to our example, it can be useful to represent a domain with
	a DSL at the upper levels of abstraction, but questionable to create
	explicit object representations under this surface. We can have a
	DSL that says, for example groupUsersByDomain in emailAddresses,
	but implement it with List<EmailAddresses>. foldLeft(new HashMap<…>(),
	groupingFunction) ;, where groupingFunction does the "group by" magic
	on the users and domains."
	
	
	Chapter 5
	
	"Make your objects behave to the outside world as if they are side-effect-free
	and immutable." 
	
	"Pattern matching gives us a new tool for modularity, where we can
	do data extraction in a way that is controlled by the types themselves.
	We can use pattern matching to implement new features, yet never
	pollute the original types with those features. We can localize feature
	development in one place, rather than spreading it over all the files
	for a type hierarchy."
	
	
	Chapter 6
	
	"Functional programming moves the abstraction layers lower, to core
	data structures and combinator functions. Combined with immutable
	values and side-effect-free functions, the modularity and reusability
	of functional code is usually better than similar object-oriented
	code. Because objects are so free to expose abstractions any way
	they want, they are less reusable and composable, which is a paradox."
	
	"Functional programming isn't simple, but it represents a return to
	simplicity: the goal of minimizing implementation size and complexity
	by rethinking our ideas of appropriate design patterns and implementation
	idioms."},
  url = {http://oreilly.com/catalog/9781449311032/}
}

@INPROCEEDINGS{wappler06evolutionaryunit,
  author = {Stefan Wappler and Joachim Wegener},
  title = {Evolutionary Unit Testing of Object-Oriented Software using Strongly-Typed
	Genetic Programming},
  booktitle = {Proceedings of the 8th annual Conference on Genetic and Evolutionary
	Computation},
  year = {2006},
  series = {GECCO '06},
  pages = {1925--1932},
  address = {New York, NY, USA},
  month = {July},
  publisher = {ACM},
  doi = {10.1145/1143997.1144317},
  file = {237 858 bytes:..\\papers\\Evolutionary Unit Testing of OO using STGP.pdf:PDF},
  isbn = {1-59593-186-4},
  location = {Seattle, Washington, USA},
  url = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.93.651&rep=rep1&type=pdf}
}

@ARTICLE{wegener01evolutionarytest,
  author = {Joachim Wegener and André Baresel and Harmen Sthamer},
  title = {Evolutionary Test Environment for Automatic Structural Testing},
  journal = {Information and Software Technology Special Issue on Software Engineering
	using Metaheuristic Innovative Algorithms},
  year = {2001},
  volume = {43},
  pages = {841--854},
  number = {14},
  month = {December},
  doi = {doi:10.1016/S0950-5849(01)00190-2},
  file = {588 714 bytes:..\\papers\\Evolutionary test environment for automatic structural testing.pdf:PDF},
  url = {http://www.sciencedirect.com/science/article/pii/S0950584901001902}
}

@ELECTRONIC{ms11codemetrics,
  month = {January},
  year = {2011},
  title = {Visual Studio Code Metrics PowerTool 10.0},
  note = {Accessed July 2011 from \url{http://www.microsoft.com/download/en/details.aspx?id=9422}},
  url = {http://www.microsoft.com/download/en/details.aspx?id=9422}
}

@ELECTRONIC{msdn10avoidcomplexity,
  year = {2010},
  title = {CA1502: Avoid excessive complexity},
  organization = {Microsoft},
  note = {Accessed June 2011 from \url{http://msdn.microsoft.com/en-us/library/ms182212.aspx}},
  url = {http://msdn.microsoft.com/en-us/library/ms182212.aspx}
}

@ELECTRONIC{msdn10codemetrics,
  month = {April},
  year = {2010},
  title = {Code Metrics Values},
  note = {Accessed July 2011 from \url{http://msdn.microsoft.com/en-us/library/bb385914.aspx}},
  url = {http://msdn.microsoft.com/en-us/library/bb385914.aspx}
}

@ELECTRONIC{msdn10explicitinterface,
  month = {April},
  year = {2010},
  title = {Explicit Interface Implementation (C\# Programming Guide)},
  note = {Accessed July 2010 from \url{http://msdn.microsoft.com/en-us/library/ms173157.aspx}},
  url = {http://msdn.microsoft.com/en-us/library/ms173157.aspx}
}

@ELECTRONIC{msdn10internal,
  month = {April},
  year = {2010},
  title = {internal (C\# Reference)},
  note = {Accessed July 2011 from \url{http://msdn.microsoft.com/en-us/library/7c5ka91b%28v=VS.100%29.aspx}},
  url = {http://msdn.microsoft.com/en-us/library/7c5ka91b%28v=VS.100%29.aspx}
}

@ELECTRONIC{msdn10internalsvisible,
  month = {April},
  year = {2010},
  title = {InternalsVisibleToAttribute Class (System.Runtime.CompilerServices)},
  note = {Accessed July 2011 from \url{http://msdn.microsoft.com/en-us/library/system.runtime.compilerservices.internalsvisibletoattribute.aspx}},
  url = {http://msdn.microsoft.com/en-us/library/system.runtime.compilerservices.internalsvisibletoattribute.aspx}
}

@ELECTRONIC{msdn10msbuild,
  month = {April},
  year = {2010},
  title = {MSBuild},
  note = {Accessed July 2010 from \url{http://msdn.microsoft.com/en-us/library/dd393574.aspx}},
  url = {http://msdn.microsoft.com/en-us/library/dd393574.aspx}
}

@ELECTRONIC{msdn10ref,
  month = {April},
  year = {2010},
  title = {ref (C\# Reference)},
  note = {Accessed October 2011 from \url{http://msdn.microsoft.com/en-us/library/14akc2c7.aspx}},
  url = {http://msdn.microsoft.com/en-us/library/14akc2c7.aspx}
}

@ELECTRONIC{msdn10settinginternals,
  year = {2010},
  title = {Setting the InternalsVisibleTo Attribute},
  note = {Accessed July 2011 from \url{http://msdn.microsoft.com/en-us/library/bb385840.aspx}},
  url = {http://msdn.microsoft.com/en-us/library/bb385840.aspx}
}

@ELECTRONIC{msdn10tupleclass,
  month = {April},
  year = {2010},
  title = {Tuple Class (System)},
  note = {Accessed July 2011 from \url{http://msdn.microsoft.com/en-us/library/system.tuple%28VS.100%29.aspx}},
  url = {http://msdn.microsoft.com/en-us/library/system.tuple%28VS.100%29.aspx}
}

@ELECTRONIC{eclipse08extractmethod,
  year = {2008},
  title = {Extract Method},
  note = {Accessed July 2011 from \url{http://help.eclipse.org/ganymede/index.jsp?topic=/org.eclipse.jdt.doc.user/reference/ref-menu-refactor.htm}},
  url = {http://help.eclipse.org/ganymede/index.jsp?topic=/org.eclipse.jdt.doc.user/reference/ref-menu-refactor.htm}
}

@ELECTRONIC{msdn08deepzoom,
  year = {2008},
  title = {Deep Zoom File Format Overview},
  note = {Accessed July 2011 from \url{http://msdn.microsoft.com/en-us/library/cc645077(VS.95).aspx}},
  url = {http://msdn.microsoft.com/en-us/library/cc645077(VS.95).aspx}
}

@ELECTRONIC{python08datastructures,
  month = {October},
  year = {2008},
  title = {5. Data Structures -- Python v2.7.2 documentation},
  note = {Accessed July 2011 from \url{http://docs.python.org/tutorial/datastructures.html}},
  url = {http://docs.python.org/tutorial/datastructures.html}
}

@ELECTRONIC{esa05clustermission,
  month = {February},
  year = {2005},
  title = {Summary of the Cluster Mission},
  organization = {European Space Agency},
  note = {Accessed May 2011 from \url{http://sci.esa.int/science-e/www/object/index.cfm?fobjectid=31258}},
  url = {http://sci.esa.int/science-e/www/object/index.cfm?fobjectid=31258}
}

@ELECTRONIC{msdn05extractmethod,
  year = {2005},
  title = {Extract Method},
  note = {Accessed July 2011 from \url{http://msdn.microsoft.com/en-us/library/0s21cwxk%28VS.80%29.aspx}},
  url = {http://msdn.microsoft.com/en-us/library/0s21cwxk%28VS.80%29.aspx}
}

@ELECTRONIC{java96names,
  year = {1996},
  title = {Names},
  note = {Accessed July 2011 from \url{http://java.sun.com/docs/books/jls/third_edition/html/names.html}},
  url = {http://java.sun.com/docs/books/jls/third_edition/html/names.html}
}

@ELECTRONIC{java96packages,
  year = {1996},
  title = {Packages},
  note = {Accessed July 2011 from \url{http://java.sun.com/docs/books/jls/third_edition/html/packages.html}},
  url = {http://java.sun.com/docs/books/jls/third_edition/html/packages.html}
}

@comment{jabref-meta: selector_publisher:}

@comment{jabref-meta: selector_author:}

@comment{jabref-meta: selector_journal:}

@comment{jabref-meta: selector_keywords:}

